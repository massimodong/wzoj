<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: wjudger.proto

namespace WJudger;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>WJudger.CompileResult</code>
 */
class CompileResult extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>bool compileEror = 1;</code>
     */
    protected $compileEror = false;
    /**
     * Generated from protobuf field <code>repeated string testcases = 2;</code>
     */
    private $testcases;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type bool $compileEror
     *     @type array<string>|\Google\Protobuf\Internal\RepeatedField $testcases
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Wjudger::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>bool compileEror = 1;</code>
     * @return bool
     */
    public function getCompileEror()
    {
        return $this->compileEror;
    }

    /**
     * Generated from protobuf field <code>bool compileEror = 1;</code>
     * @param bool $var
     * @return $this
     */
    public function setCompileEror($var)
    {
        GPBUtil::checkBool($var);
        $this->compileEror = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>repeated string testcases = 2;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getTestcases()
    {
        return $this->testcases;
    }

    /**
     * Generated from protobuf field <code>repeated string testcases = 2;</code>
     * @param array<string>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setTestcases($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->testcases = $arr;

        return $this;
    }

}

